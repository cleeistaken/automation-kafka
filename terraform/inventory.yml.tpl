#
# This file is automatically generated by the Terraform inventory module
#
---
  all:
    vars:

      # Ansible
      ansible_connection: ssh
      ansible_user: ${ vm_user }
      ansible_ssh_private_key_file: ${ vm_ssh_private_key_file }
      ansible_become: yes

      # Automation System Local IP
      local_ip: ${ automation_system_local_ip }

      # vCenter
      vcenter:
        host: ${ vcenter_server }
        username: ${ vcenter_user }
        password: ${ vcenter_password }
        allow_unverified_ssl: ${ vcenter_allow_unverified_ssl }

      # vSphere
      vsphere:
        datacenter: ${ vsphere_datacenter }
        cluster: ${ vsphere_cluster }

      # Kafka
      # Ref. https://github.com/confluentinc/cp-ansible/blob/7.3.4-post/docs/hosts_example.yml
      installation_method: archive
      redhat_java_package_name: java-11-openjdk

      # 7.3.3
      confluent_archive_file_source: http://${ automation_system_local_ip }/files/confluent-7.3.3.tar.gz
      confluent_package_version: 7.3.3

      # 6.2.0 
      #confluent_archive_file_source: http://${ automation_system_local_ip }/files/confluent-6.2.0.tar.gz
      #confluent_package_version: 6.2.0

      kafka_broker_custom_listeners:
        broker:
          name: BROKER
          port: 9091
          ssl_enabled: false
          ssl_mutual_auth_enabled: false
          sasl_protocol: none
        internal:
          name: INTERNAL
          port: 9092
          ssl_enabled: false
          ssl_mutual_auth_enabled: false
          sasl_protocol: none
        client_listener:
          name: CLIENT
          port: 9093
          ssl_enabled: true
          ssl_mutual_auth_enabled: true
          sasl_protocol: scram

      #### Monitoring Configuration ####
      ## Jolokia is disabled by default. When enabled, Jolokia jar gets pulled from the internet and enabled on all the components
      ## To enable, uncomment this line:
      # jolokia_enabled: true
      ## To copy from control host instead of downloading from remote URL:
      # jolokia_url_remote: false
      ## During setup, the hosts will download the jolokia agent jar from Maven. To update that jar download set this var
      # jolokia_jar_url: http://<inteneral-server>/jolokia-jvm-1.6.2-agent.jar
      ## JMX Exporter is disabled by default. When enabled, JMX Exporter jar will be pulled from the Internet and enabled on the broker and zookeeper *only*.
      ## To enable, uncomment this line:
      jmxexporter_enabled: true
      ## To update that jar download set this var
      # jmxexporter_jar_url: http://<internal-server>/jmx_prometheus_javaagent-0.12.0.jar
      ## To copy from control host instead of downloading from remote URL:
      # jmxexporter_url_remote: false

  #
  # Control Center
  #
  control_center:
    hosts:
%{ for vm in vms_control_center ~}
      ${ vm.clone[0].customize[0].network_interface[0].ipv4_address }:
        hostname: ${ vm.name }
        fqdn: ${ vm.clone[0].customize[0].linux_options[0].host_name }.${ vm.clone[0].customize[0].linux_options[0].domain }
        uuid: ${ vm.id }
%{ endfor ~}

  #
  # Kafka Broker
  #
  kafka_broker:
    vars:
      kafka_broker_custom_properties:
        log.dirs: ${ join(",", broker_data_disks) }
    hosts:
%{ for vm in vms_kafka_broker ~}
      ${ vm.clone[0].customize[0].network_interface[0].ipv4_address }:
        hostname: ${ vm.name }
        fqdn: ${ vm.clone[0].customize[0].linux_options[0].host_name }.${ vm.clone[0].customize[0].linux_options[0].domain }
        uuid: ${ vm.id }
        kafka_broker_custom_properties:
          broker.rack: rack_1
          default.replication.factor: 3
        # Leave broker ID unset to have it automatically assigned. Uncomment and set if
        # it needs to be set to a specific value.
        # https://kafka.apache.org/20/documentation.html
        # broker_id: 0
        kafka_broker_custom_listeners:
          broker:
            hostname: ${ vm.clone[0].customize[0].network_interface[0].ipv4_address }
          internal:
            hostname: ${ vm.clone[0].customize[0].network_interface[1].ipv4_address }
%{ endfor ~}

  #
  # Zookeeper
  #
  zookeeper:
    hosts:
%{ for vm in vms_zookeeper ~}
      ${ vm.clone[0].customize[0].network_interface[0].ipv4_address }:
        hostname: ${ vm.name }
        fqdn: ${ vm.clone[0].customize[0].linux_options[0].host_name }.${ vm.clone[0].customize[0].linux_options[0].domain }
        uuid: ${ vm.id }
        # Leave zookeeper ID unset to have it automatically assigned. Uncomment and set if
        # it needs to be set to a specific value.
        # https://kafka.apache.org/20/documentation.html
        # zookeeper_id: -1
%{ endfor ~}

  #
  # Connect
  #
  kafka_connect:
    hosts:
%{ for vm in vms_kafka_connect ~}
      ${ vm.clone[0].customize[0].network_interface[0].ipv4_address }:
        hostname: ${ vm.name }
        fqdn: ${ vm.clone[0].customize[0].linux_options[0].host_name }.${ vm.clone[0].customize[0].linux_options[0].domain }
        uuid: ${ vm.id }
%{ endfor ~}

#
# EOF
#
