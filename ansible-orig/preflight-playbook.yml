---
    - name: all hosts stuff
      hosts: all
      tasks:
        - name: disable firewalld
          systemd:
            name: firewalld
            state: stopped
            enabled: no

        - name: flush iptables 
          shell: "iptables -F"

        - name: install epel-release
          yum:
            name: epel-release
            state: latest

        - name: install centos 7 requirements
          yum:
            name:
              - policycoreutils-python
          when: ansible_distribution == 'CentOS' and ansible_distribution_version >= '7' and ansible_distribution_version < '8'

        - name: install centos 8 requirements
          yum:
            name:
              - python3-policycoreutils
              - policycoreutils-python-utils
          when: ansible_distribution == 'CentOS' and ansible_distribution_version >= '8'

        - name: install seport prerequisite
          yum:
            name: policycoreutils-python
          when: ansible_os_family == "RedHat" and ansible_distribution_version >= '7' and ansible_distribution_version < '8'

        - name: install python requirements
          yum: 
            name:
              - python3
              - python3-pip
              - python3-setuptools

        - name: install python requirements
          yum:
            name:
              - python2-pip
              - python2-setuptools

        - name: update pip to latest
          pip:
            name:
              - pip
            state: latest

        - name: update setuptools to latest
          pip:
            name:
              - setuptools
            state: latest

    - name: ZK Stuff
      hosts: zookeeper
      tasks:
        - import_role:
            name: confluent.variables_handlers
        - name: Partition drives
          parted:
            device: /dev/sdb
            number: 1 
            state: present

        - name: create filessytem
          filesystem:
            fstype: xfs
            dev: /dev/sdb1

        - name: Mount Zookeeper Datadir
          mount:
            src: /dev/sdb1
            path: /var/lib/zookeeper
            opts: noatime
            state: mounted
            fstype: xfs
        - name: Zookeeper Client Port
          seport:
            ports:
              - "{{ zookeeper.properties.clientPort | default('2181') }}"
            proto: tcp
            setype: zookeeper_client_port_t
            state: present
          when:
            - ansible_version.full is version_compare('2.4', '>=')
            - ansible_selinux.status == "enabled"
        - name: Zookeeper Election Port
          seport:
            ports:
              - "{{ zookeeper_leader_port | default('3888') }}"
            proto: tcp
            setype: zookeeper_election_port_t
            state: present
          when:
            - ansible_version.full is version_compare('2.4', '>=')
            - ansible_selinux.status == "enabled"
        - name: Zookeeper Leader Port
          seport:
            ports:
              - "{{ zookeeper_leader_port | default('2888') }}"
            proto: tcp
            setype: zookeeper_leader_port_t
            state: present
          when:
            - ansible_version.full is version_compare('2.4', '>=')
            - ansible_selinux.status == "enabled"

    - name: Broker Stuff
      hosts: kafka_broker
      vars:
        data_disks: "{{ hostvars[inventory_hostname].ansible_devices.keys() | map('regex_search', 'sd([b-z]+|[a-z]{2})') | select('string') | list | sort }}"
      tasks:
        - import_role:
            name: confluent.variables_handlers
    
        - name: gather hardware facts
          setup:
            gather_subset:
              - hardware

        - debug:
            var: data_disks
 
        - name: get disks (/dev/sd*) except sda (OS)
          set_fact:
            broker_data_drives: "{{ broker_data_drives|default([]) + [ '/dev/' ~ item ] }}"
          loop: "{{ data_disks }}"

        - name: list disks
          debug:
            var: broker_data_drives

        - name: get mounted devices
          set_fact:
            mounted_devices: "{{ ansible_mounts|json_query('[].device') }}"     

        - name: List mounted devices
          debug:
            var: mounted_devices

        - name: Partition drives
          parted:
            device: "{{ item }}"
            number: 1 
            state: present
          when: item not in mounted_devices
          loop: "{{ broker_data_drives }}"
        
        - name: create filessytem
          filesystem:
            fstype: xfs
            dev: "{{ item }}1"
          when: item not in mounted_devices
          loop: "{{ broker_data_drives }}"
          loop_control:
            index_var: my_index
        
        - name: Mount Kafka Datadir
          mount:
            src: "{{ item }}1"
            path: "/var/lib/kafka/data{{ my_index }}"
            opts: noatime
            state: mounted
            fstype: xfs
          # add kafka storage devices here 
          # make sure to also add each mounted dir to 
          # log.dirs in hosts.yml:
          # log.dirs=/var/lib/kafka/data1,/var/lib/kafka/data2 etc...
          when: item not in mounted_devices
          loop: "{{ broker_data_drives }}"
          loop_control:
            index_var: my_index

        - name: Broker ports
          seport:
            ports:
              - "{{ kafka_broker_default_listeners.external.port }}"
              - "{{ kafka_broker_custom_listeners.internal.port }}"
            proto: tcp
            setype: http_port_t
            state: present
          when:
            - ansible_version.full is version_compare('2.4', '>=')
            - ansible_selinux.status == "enabled"
    
    - name: Kafka Connect
      hosts: kafka_connect
      tasks:
        - import_role:
            name: confluent.variables_handlers
        - name: Connect Ports
          seport:
            ports: "{{ kafka_connect_rest_port }}"
            proto: tcp
            setype: us_cli_port_t
            state: present
          when:
            - ansible_version.full is version_compare('2.4', '>=')
            - ansible_selinux.status == "enabled"

    - name: Control Center
      hosts: control_center
      tasks:
        - import_role:
            name: confluent.variables_handlers
        - name: Control Center ports
          seport:
            ports: "{{ control_center_port }}"
            proto: tcp
            setype: http_port_t
            state: present
          when:
            - ansible_version.full is version_compare('2.4', '>=')
            - ansible_selinux.status == "enabled"

